// Quick test to create a sample RTF file with proper formatting
const fs = require('fs');
const path = require('path');
const os = require('os');

const DESKTOP_PATH = path.join(os.homedir(), 'Desktop');

// Test RTF creation
function createTestRTF() {
    const contentData = {
        title: 'Test Document',
        content: 'This is a test paragraph.\n\nThis is another paragraph with some content.\n\nThis should work properly in Microsoft Word without any errors.',
        generationInfo: 'Generated by Windows Assistant (Test Mode)'
    };

    // Clean and escape content for RTF
    const cleanTitle = contentData.title
        .replace(/\\/g, '\\\\')
        .replace(/{/g, '\\{')
        .replace(/}/g, '\\}')
        .replace(/\n/g, '\\par ');
    
    const cleanContent = contentData.content
        .replace(/\\/g, '\\\\')
        .replace(/{/g, '\\{')
        .replace(/}/g, '\\}')
        .replace(/\n\n/g, '\\par\\par ')
        .replace(/\n/g, '\\line ')
        .replace(/\t/g, '\\tab ');

    // Create proper RTF document with correct structure
    const rtfContent = `{\\rtf1\\ansi\\deff0
{\\fonttbl
{\\f0\\froman Times New Roman;}
{\\f1\\fswiss Arial;}
{\\f2\\fmodern Courier New;}
}
{\\colortbl
;\\red0\\green0\\blue0;
\\red0\\green0\\blue255;
\\red128\\green128\\blue128;
}

\\viewkind4\\uc1\\pard

{\\pard\\qc\\f1\\fs28\\b\\cf2 ${cleanTitle}\\b0\\fs24\\cf1\\par}
\\par

{\\pard\\ql\\f0\\fs22\\cf1
${cleanContent}
\\par}

\\par
{\\pard\\ql\\f0\\fs16\\i\\cf3
Generated: ${new Date().toLocaleString()}\\line
${contentData.generationInfo.replace(/\\/g, '\\\\').replace(/{/g, '\\{').replace(/}/g, '\\}')}\\i0\\cf1\\par}

}`;

    const testFilePath = path.join(DESKTOP_PATH, `TEST_RTF_${Date.now()}.rtf`);
    fs.writeFileSync(testFilePath, rtfContent);
    
    console.log('‚úÖ Test RTF file created:', testFilePath);
    console.log('üìù Try opening this file in Word to verify it works without errors');
    
    return testFilePath;
}

// Create Word-compatible HTML test
function createTestHTML() {
    const contentData = {
        title: 'Test HTML Document',
        content: 'This is a test paragraph.\n\nThis is another paragraph with some content.\n\nThis should open perfectly in Microsoft Word.',
        generationInfo: 'Generated by Windows Assistant (HTML Test)'
    };

    const htmlContent = `<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>${contentData.title}</title>
    <style>
        body { 
            font-family: 'Times New Roman', serif; 
            font-size: 12pt;
            line-height: 1.5;
            margin: 1in;
        }
        h1 { 
            color: #2F5496; 
            text-align: center; 
            font-size: 16pt;
            font-weight: bold;
            margin-bottom: 20pt;
        }
        p { 
            margin-bottom: 10pt; 
            text-align: justify;
        }
        .footer {
            margin-top: 30pt;
            padding-top: 10pt;
            border-top: 1pt solid #cccccc;
            font-size: 9pt;
            color: #666666;
            font-style: italic;
        }
    </style>
</head>
<body>
    <h1>${contentData.title}</h1>
    
    ${contentData.content.split('\n\n').map(paragraph => {
        if (paragraph.trim() === '') return '';
        return `    <p>${paragraph.replace(/\n/g, '<br>')}</p>`;
    }).join('\n')}
    
    <div class="footer">
        <p>Generated: ${new Date().toLocaleString()}<br>
        ${contentData.generationInfo}</p>
    </div>
</body>
</html>`;

    const testFilePath = path.join(DESKTOP_PATH, `TEST_WORD_${Date.now()}.doc`);
    fs.writeFileSync(testFilePath, htmlContent);
    
    console.log('‚úÖ Test HTML/DOC file created:', testFilePath);
    console.log('üìù Try opening this file in Word - it should open perfectly');
    
    return testFilePath;
}

console.log('üß™ Creating test files to verify Word compatibility...');
console.log('');

const rtfFile = createTestRTF();
const htmlFile = createTestHTML();

console.log('');
console.log('üéØ TEST INSTRUCTIONS:');
console.log('1. Go to your Desktop');
console.log('2. Try opening both test files in Microsoft Word');
console.log('3. RTF file should open without any "unreadable content" errors');
console.log('4. HTML/DOC file should open with perfect formatting');
console.log('');
console.log('If both files open correctly, the fix is working! ‚úÖ');
